plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Jakarta Validation API
    implementation 'jakarta.validation:jakarta.validation-api:3.0.0'

    // Hibernate Validator (Jakarta Validation의 구현체)
    implementation 'org.hibernate.validator:hibernate-validator:7.0.0.Final'

    // Spring Boot Validation Starter (필요한 경우 추가)
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // 기타 의존성 (예: Spring Web)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // 테스트 의존성 (필요에 따라 추가)
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON을 파싱할 때 필요
}

tasks.named('test') {
    useJUnitPlatform()
}
